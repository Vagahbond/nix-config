{
  config,
  lib,
  ...
}:
with lib; let
  username = import ../../username.nix;

  isNvidiaEnabled = lib.lists.any (e: (e == config.modules.graphics.type)) ["nvidia-optimus" "nvidia"];
in
  assert config.modules.graphics.type != "nvidia-optimus" -> config.hardware.nvidia.prime.nvidiaBusId != null;
  assert config.modules.graphics.type != "nvidia-optimus" -> config.hardware.nvidia.prime.intelBusId != null; {
    imports = [./options.nix];

    config = mkMerge [
      (
        mkIf (config.modules.graphics.type != null) {
          users.users.${username}.extraGroups = ["video"];
        }
      )
      (
        mkIf isNvidiaEnabled {
          hardware.nvidia.package = config.boot.kernelPackages.nvidiaPackages.stable;

          services.xserver.videoDrivers = ["nvidia"];

          hardware.nvidia = {
            # Modesetting is required.
            modesetting.enable = true;

            # Nvidia power management. Experimental, and can cause sleep/suspend to fail.
            powerManagement.enable = false;
            # Fine-grained power management. Turns off GPU when not in use.
            # Experimental and only works on modern Nvidia GPUs (Turing or newer).
            powerManagement.finegrained = false;

            # Use the NVidia open source kernel module (not to be confused with the
            # independent third-party "nouveau" open source driver).
            # Support is limited to the Turing and later architectures. Full list of
            # supported GPUs is at:
            # https://github.com/NVIDIA/open-gpu-kernel-modules#compatible-gpus
            # Only available from driver 515.43.04+
            # Do not disable this unless your GPU is unsupported or if you have a good reason to.
            open = true;

            # Enable the Nvidia settings menu,
            # accessible via `nvidia-settings`.
            nvidiaSettings = true;
          };

          # Enable OpenGL
          hardware.opengl = {
            enable = true;
            driSupport = true;
            driSupport32Bit = true;
          };
        }
      )
      (
        mkIf assert config.modules.graphics.type != "nvidia-optimus" -> config.hardware.nvidia.prime.nvidiaBusId != null;
  assert config.modules.graphics.type != "nvidia-optimus" -> config.hardware.nvidia.prime.intelBusId != null;  
  (config.modules.graphics.type == "nvidia-optimus") {
        }
      )
    ];
  }
